pid   /var/run/nginx.pid;
user  tempest-web tempest-web;

worker_processes  5;

events {
  worker_connections  1024;
}

http {
  include   /etc/nginx/mime.types;

  access_log  "/var/log/opsmanager/access.log";
  error_log   "/var/log/opsmanager/error.log";

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;

  # Omitting this parameter inhibits nginx from starting on OpenStack
  types_hash_max_size 2048;

  keepalive_timeout  65;

  upstream tomcat_server {
    server localhost:8080 fail_timeout=0;
  }

  # Thin app (served via UNIX socket) which only deals with http
  upstream tempest-web-app {
    server unix:/tmp/tempest-web.sock max_fails=1 fail_timeout=15s;
  }

  # Redirects all http traffic to https
  server {
    listen 80;
    rewrite ^ https://$host$request_uri? permanent;
  }

  # Proxy non-static traffic to thin
  server {
    listen 443;

    ssl on;
    ssl_certificate     "/etc/nginx/ssl/nginx.crt";
    ssl_certificate_key "/etc/nginx/ssl/nginx.key";
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;

    proxy_buffering         off;
    proxy_buffer_size       8k; # UAA cookies result in headers larger than the default value 4K

    proxy_send_timeout      3600s; # nginx sending to upstream; between two write operations
    proxy_read_timeout      3600s; # nginx waiting on upstream; between two read operations

    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto https;

    location /uaa/ {
      proxy_redirect off;
      proxy_pass http://tomcat_server;
    }

    # Serve Rails asset pipeline and webpack static files gzipped
    location ~ ^/((webpack_)?assets)/ {
      root "/home/tempest-web/tempest/web/public";
      gzip on;
      gzip_static on;
      gzip_vary on;
    }

    # Send any file via Nginx
    proxy_set_header  X-Sendfile-Type   X-Accel-Redirect;
    proxy_set_header  X-Accel-Mapping   /=/root-accel-mapping/;

    location ~ ^/root-accel-mapping/(.*) {
      internal;
      alias /$1;
    }

    location ~ (/api/stemcells|/api/v0/stemcells|/api/products|/api/v0/available_products)$ {
      if ($request_method != POST){
        proxy_pass http://tempest-web-app;
      }

      # Results in '413 (Request entity too large)' if client sends too large of a body
      client_max_body_size 50G;

      # Instead of passing entire file contents to ruby process,
      # write file to tmp file and pass path to file to ruby process.
      # Speeds up PAS tile uploads by ~10 minutes.
      upload_pass @uploads;

      # remaps requests form elements from
      #   { "product": { "file": BINARY_DATA } }
      # to
      #   { "product": { "file": { "path": "/var/tempest/tmp/000001", "original_filename": "ert-1.2.3.pivotal" } }
      upload_set_form_field $upload_field_name[path] "$upload_tmp_path";
      upload_set_form_field $upload_field_name[original_filename] "$upload_file_name";

      upload_pass_form_field "product";
      upload_pass_form_field "stemcell";

      # No limit for output body size.
      upload_max_output_body_len 0;

      # Store temp files into given directory.
      upload_store /var/tempest/tmp;

      # Allow uploaded files to be read only by user
      upload_store_access user:r;

      #on any error, delete uploaded files.
      upload_cleanup 400-505;
    }
    location @uploads {
      proxy_pass http://tempest-web-app;
    }

    # Pass everything to tempest-web-app
    location / {
      proxy_pass http://tempest-web-app;

      client_max_body_size 50G; # Results in '413 (Request entity too large)' if client sends too large of a body
    }
  }
}cat nginx.conf
pid   /var/run/nginx.pid;
user  tempest-web tempest-web;

worker_processes  5;

events {
  worker_connections  1024;
}

http {
  include   /etc/nginx/mime.types;

  access_log  "/var/log/opsmanager/access.log";
  error_log   "/var/log/opsmanager/error.log";

  sendfile    on;
  tcp_nopush  on;
  tcp_nodelay on;

  # Omitting this parameter inhibits nginx from starting on OpenStack
  types_hash_max_size 2048;

  keepalive_timeout  65;

  upstream tomcat_server {
    server localhost:8080 fail_timeout=0;
  }

  # Thin app (served via UNIX socket) which only deals with http
  upstream tempest-web-app {
    server unix:/tmp/tempest-web.sock max_fails=1 fail_timeout=15s;
  }

  # Redirects all http traffic to https
  server {
    listen 80;
    rewrite ^ https://$host$request_uri? permanent;
  }

  # Proxy non-static traffic to thin
  server {
    listen 443;

    ssl on;
    ssl_certificate     "/etc/nginx/ssl/nginx.crt";
    ssl_certificate_key "/etc/nginx/ssl/nginx.key";
    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;

    proxy_buffering         off;
    proxy_buffer_size       8k; # UAA cookies result in headers larger than the default value 4K

    proxy_send_timeout      3600s; # nginx sending to upstream; between two write operations
    proxy_read_timeout      3600s; # nginx waiting on upstream; between two read operations

    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Real-IP         $remote_addr;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto https;

    location /uaa/ {
      proxy_redirect off;
      proxy_pass http://tomcat_server;
    }

    # Serve Rails asset pipeline and webpack static files gzipped
    location ~ ^/((webpack_)?assets)/ {
      root "/home/tempest-web/tempest/web/public";
      gzip on;
      gzip_static on;
      gzip_vary on;
    }

    # Send any file via Nginx
    proxy_set_header  X-Sendfile-Type   X-Accel-Redirect;
    proxy_set_header  X-Accel-Mapping   /=/root-accel-mapping/;

    location ~ ^/root-accel-mapping/(.*) {
      internal;
      alias /$1;
    }

    location ~ (/api/stemcells|/api/v0/stemcells|/api/products|/api/v0/available_products)$ {
      if ($request_method != POST){
        proxy_pass http://tempest-web-app;
      }

      # Results in '413 (Request entity too large)' if client sends too large of a body
      client_max_body_size 50G;

      # Instead of passing entire file contents to ruby process,
      # write file to tmp file and pass path to file to ruby process.
      # Speeds up PAS tile uploads by ~10 minutes.
      upload_pass @uploads;

      # remaps requests form elements from
      #   { "product": { "file": BINARY_DATA } }
      # to
      #   { "product": { "file": { "path": "/var/tempest/tmp/000001", "original_filename": "ert-1.2.3.pivotal" } }
      upload_set_form_field $upload_field_name[path] "$upload_tmp_path";
      upload_set_form_field $upload_field_name[original_filename] "$upload_file_name";

      upload_pass_form_field "product";
      upload_pass_form_field "stemcell";

      # No limit for output body size.
      upload_max_output_body_len 0;

      # Store temp files into given directory.
      upload_store /var/tempest/tmp;

      # Allow uploaded files to be read only by user
      upload_store_access user:r;

      #on any error, delete uploaded files.
      upload_cleanup 400-505;
    }
    location @uploads {
      proxy_pass http://tempest-web-app;
    }

    # Pass everything to tempest-web-app
    location / {
      proxy_pass http://tempest-web-app;

      client_max_body_size 50G; # Results in '413 (Request entity too large)' if client sends too large of a body
    }
  }
}
